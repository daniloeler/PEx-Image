/*
 * FeaturesWeightView.java
 *
 * Created on 28 de Abril de 2009, 10:28
 */
package visualizer.view.tools;

import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import visualizer.dimensionreduction.DimensionalityReductionType;
import visualizer.matrix.DenseMatrix;
import visualizer.matrix.DenseVector;
import visualizer.matrix.Vector;
import visualizer.matrix.normalization.Normalization;
import visualizer.matrix.normalization.NormalizationFactory;
import visualizer.matrix.normalization.NormalizationType;
import visualizer.util.OpenDialog;
import visualizer.util.SaveDialog;
import visualizer.util.filefilter.DATAFilter;

/**
 *
 * @author  Danilo
 */
public class FeaturesWeightView extends javax.swing.JDialog {

    /** Creates new form FeaturesWeightView */
    public FeaturesWeightView(java.awt.Frame parent) {
        super(parent);
        initComponents();
        this.featureModel = (DefaultTableModel) this.features_jTable.getModel();
        for (NormalizationType nt : NormalizationType.getTypes()) {
            this.normalizationComboBox.addItem(nt);
        }
    }

    public static FeaturesWeightView getInstance(java.awt.Frame parent) {
        if (instance == null) {
            instance = new FeaturesWeightView(parent);
        }
        return instance;
    }

    public void display() {
        this.setLocationRelativeTo(this.getParent());
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        features_jTable = new javax.swing.JTable();
        addFeatures_jButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        normalizationComboBox = new javax.swing.JComboBox();
        clearAll_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));

        features_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "Weight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(features_jTable);

        addFeatures_jButton.setText("Add Features");
        addFeatures_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFeatures_jButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Save Weighted Features");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        clearAll_jButton.setText("Clear All");
        clearAll_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAll_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(clearAll_jButton)
                .addGap(59, 59, 59)
                .addComponent(addFeatures_jButton)
                .addGap(78, 78, 78)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(117, 117, 117))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(normalizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(470, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(normalizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addFeatures_jButton)
                        .addComponent(clearAll_jButton)))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void addFeatures_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFeatures_jButtonActionPerformed
        // TODO add your handling code here:
        int result = OpenDialog.showOpenDialog(new DATAFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            //String filename = getFilename(OpenDialog.getFilename());
            String[] row = new String[2];
            row[0] = filename;
            row[1] = "1.0";
            this.featureModel.addRow(row);
        }
    }//GEN-LAST:event_addFeatures_jButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int result = SaveDialog.showSaveDialog(new DATAFilter(), this, "newFeatureSpace.data");

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = SaveDialog.getFilename();
            try{
            generateMatrix().save(filename);            
            }
            catch(IOException ioe){
                ioe.printStackTrace();
            }
            
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearAll_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAll_jButtonActionPerformed
        // TODO add your handling code here:
        while (this.featureModel.getRowCount() > 0){
          this.featureModel.removeRow( this.featureModel.getRowCount() - 1 );
        }
    }//GEN-LAST:event_clearAll_jButtonActionPerformed

    private DenseMatrix generateMatrix() {
        ArrayList<DenseMatrix> features = new ArrayList<DenseMatrix>();

        Normalization norm = NormalizationFactory.getInstance( (NormalizationType) this.normalizationComboBox.getSelectedItem() );
        int nCol = 0;
        for (int i = 0; i < this.featureModel.getRowCount(); i++) {
            DenseMatrix d = new DenseMatrix();
            try {
                d.load((String) this.featureModel.getValueAt(i, 0));
                nCol = nCol + d.getDimensions();
                d = (DenseMatrix) norm.execute(d);
                features.add(d);
            } catch (IOException ioe) {
                ioe.printStackTrace();
            }
        }        
        
        float[][] finalM = new float[features.get(0).getRowCount()][nCol];
        int lastIni = 0;
        ArrayList<String> attributes = new ArrayList<String>();
        for (int i = 0; i < this.featureModel.getRowCount(); i++){
            float[][] m = features.get(i).toMatrix();
            float w = Float.parseFloat((String) this.featureModel.getValueAt(i, 1));            
            //getting attributes
            for (String s:features.get(i).getAttributes()){
                attributes.add(s);
            }
            //weighting
            for (int j=0; j<m.length; j++){
                for (int k=0; k<m[j].length; k++){
                    finalM[j][lastIni+k] = m[j][k] * w;
                }
            }
            lastIni = lastIni + m[0].length;
        }

        DenseMatrix finalMatrix = new DenseMatrix();
        finalMatrix.setAttributes(attributes);
        for (int i = 0; i < features.get(0).getRowCount(); i++) {
            Vector oldv = features.get(0).getRow(i);
            finalMatrix.addRow(new DenseVector(finalM[i], oldv.getId(), oldv.getKlass()));
        }        
        
        return finalMatrix;
    }

    private String getFilename(String filename) {
        return filename.substring(filename.lastIndexOf("\\") + 1, filename.length());
    }
    private DefaultTableModel featureModel;
    private static FeaturesWeightView instance;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFeatures_jButton;
    private javax.swing.JButton clearAll_jButton;
    private javax.swing.JTable features_jTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox normalizationComboBox;
    // End of variables declaration//GEN-END:variables
}
