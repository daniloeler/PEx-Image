/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (c) 2005-2007 Universidade de Sao Paulo, Sao Carlos/SP, Brazil.
 * All Rights Reserved.
 *
 * This file is part of Projection Explorer (PEx).
 *
 * How to cite this work:
 *  
@inproceedings{paulovich2007pex,
author = {Fernando V. Paulovich and Maria Cristina F. Oliveira and Rosane 
Minghim},
title = {The Projection Explorer: A Flexible Tool for Projection-based 
Multidimensional Visualization},
booktitle = {SIBGRAPI '07: Proceedings of the XX Brazilian Symposium on 
Computer Graphics and Image Processing (SIBGRAPI 2007)},
year = {2007},
isbn = {0-7695-2996-8},
pages = {27--34},
doi = {http://dx.doi.org/10.1109/SIBGRAPI.2007.39},
publisher = {IEEE Computer Society},
address = {Washington, DC, USA},
}
 *  
 * PEx is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * PEx is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 *
 * This code was developed by members of Computer Graphics and Image
 * Processing Group (http://www.lcad.icmc.usp.br) at Instituto de Ciencias
 * Matematicas e de Computacao - ICMC - (http://www.icmc.usp.br) of 
 * Universidade de Sao Paulo, Sao Carlos/SP, Brazil. The initial developer 
 * of the original code is Fernando Vieira Paulovich <fpaulovich@gmail.com>.
 *
 * Contributor(s): Rosane Minghim <rminghim@icmc.usp.br>
 *
 * You should have received a copy of the GNU General Public License along 
 * with PEx. If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */

package visualizer.view.legend;

import java.awt.Color;
import javax.swing.JTable;

/**
 *
 * @author  Fernando Vieira Paulovich
 */
public class LegendView extends javax.swing.JDialog {

    /** Creates new form LegendView */
    public LegendView(java.awt.Frame parent, Legend legend) {
        super(parent);
        initComponents();
        this.pack();
        
        this.setTitle("Legend: " + legend.getTitle());

        this.legendTableModel = new LegendTableModel(this, legend);
        this.legendTable.setModel(this.legendTableModel);

        int size = this.legendScrollPane.getWidth();
        this.legendTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        this.legendTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        this.legendTable.getColumnModel().getColumn(1).setPreferredWidth(size - 52);
        this.legendTable.setDefaultRenderer(Color.class, new LegendTableRenderer(true));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        legendScrollPane = new javax.swing.JScrollPane();
        legendTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Legend");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        legendScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        legendScrollPane.setPreferredSize(new java.awt.Dimension(300, 130));
        legendScrollPane.setViewportView(legendTable);

        getContentPane().add(legendScrollPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if (this.legendTableModel != null) {
            int size = this.legendScrollPane.getWidth();
            this.legendTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            this.legendTable.getColumnModel().getColumn(1).setPreferredWidth(size - 52);
            this.legendTable.repaint();
        }
    }//GEN-LAST:event_formComponentResized

    private LegendTableModel legendTableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane legendScrollPane;
    private javax.swing.JTable legendTable;
    // End of variables declaration//GEN-END:variables
}
