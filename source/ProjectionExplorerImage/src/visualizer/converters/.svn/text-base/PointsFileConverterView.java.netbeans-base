/*
 * PointsFileConverterView.java
 *
 * Created on 28 de Novembro de 2008, 09:23
 */
package visualizer.converters;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.Vector;
import javax.swing.JFileChooser;
import visualizer.util.OldPointsReader;
import visualizer.util.OpenDialog;
import visualizer.util.SaveDialog;
import visualizer.util.Util;
import visualizer.util.filefilter.DATAFilter;
import visualizer.util.filefilter.NAMESFilter;

/**
 *
 * @author  Danilo M Eler
 */
public class PointsFileConverterView extends javax.swing.JFrame {

    /** Creates new form PointsFileConverterView */
    public PointsFileConverterView() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        namesLabel = new javax.swing.JLabel();
        namesTextField = new javax.swing.JTextField();
        pointsTextField = new javax.swing.JTextField();
        namesButton = new javax.swing.JButton();
        pointsButton = new javax.swing.JButton();
        namesLabel1 = new javax.swing.JLabel();
        newPointsLabel = new javax.swing.JLabel();
        newPointsFile_TextField = new javax.swing.JTextField();
        newPointsFile_jButton = new javax.swing.JButton();
        convert_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Points File Converter");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        namesLabel.setText("Old Names File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(namesLabel, gridBagConstraints);

        namesTextField.setColumns(40);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(namesTextField, gridBagConstraints);

        pointsTextField.setColumns(35);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(pointsTextField, gridBagConstraints);

        namesButton.setText("Search...");
        namesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(namesButton, gridBagConstraints);

        pointsButton.setText("Search...");
        pointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(pointsButton, gridBagConstraints);

        namesLabel1.setText("Old Points File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(namesLabel1, gridBagConstraints);

        newPointsLabel.setText("New Points File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(newPointsLabel, gridBagConstraints);

        newPointsFile_TextField.setColumns(35);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(newPointsFile_TextField, gridBagConstraints);

        newPointsFile_jButton.setText("Set Filename");
        newPointsFile_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPointsFile_jButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(newPointsFile_jButton, gridBagConstraints);

        convert_jButton.setText("Convert");
        convert_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convert_jButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(convert_jButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void namesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesButtonActionPerformed
    int result = OpenDialog.showOpenDialog(new NAMESFilter(), this);

    if (result == JFileChooser.APPROVE_OPTION) {
        String filename = OpenDialog.getFilename();
        this.namesTextField.setText(filename);
    }
}//GEN-LAST:event_namesButtonActionPerformed

private void pointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsButtonActionPerformed
    int result = OpenDialog.showOpenDialog(new DATAFilter(), this);

    if (result == JFileChooser.APPROVE_OPTION) {
        String filename = OpenDialog.getFilename();
        this.pointsTextField.setText(filename);
        String newFilename = filename.substring(0, filename.lastIndexOf("\\") + 1);
        newFilename = newFilename + "NEW_" + filename.substring(filename.lastIndexOf("\\") + 1, filename.length());
        this.newPointsFile_TextField.setText(newFilename);
    }
}//GEN-LAST:event_pointsButtonActionPerformed

private void newPointsFile_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPointsFile_jButtonActionPerformed
// TODO add your handling code here:
    int result = SaveDialog.showSaveDialog(new DATAFilter(), this, "newPointsFilename");
    if (result == JFileChooser.APPROVE_OPTION) {
        String filename = SaveDialog.getFilename();
        this.newPointsFile_TextField.setText(filename);
    }
}//GEN-LAST:event_newPointsFile_jButtonActionPerformed

private void convert_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convert_jButtonActionPerformed
// TODO add your handling code here:
    BufferedWriter out = null;

    try {
        Vector<String> names = Util.readOldNamesFile(this.namesTextField.getText());
        OldPointsReader opr = new OldPointsReader(this.pointsTextField.getText());
        float[][] points = opr.getPoints();
        Vector<String> attr = opr.getAttributes();
        float[] cdata = opr.getCdata();

        out = new BufferedWriter(new FileWriter(this.newPointsFile_TextField.getText()));
        //Writting the names of the titles
        out.write("DY");out.write("\r\n");
        out.write(Integer.toString( points.length ));out.write("\r\n");
        out.write(Integer.toString( attr.size() ));out.write("\r\n");
        for (int i = 0; i<attr.size(); i++){
          out.write(attr.get(i)+";");
        }
        out.write("\r\n");
        for (int i = 0; i < points.length; i++) {
            out.write(names.get(i) + ";");
            for (int j = 0; j < points[i].length; j++) {
                out.write(points[i][j] + ";");
            }
            out.write(Float.toString(cdata[i]));
            out.write("\r\n");
        }
        
        /*
        ////gravando para Matlab
        out = new BufferedWriter(new FileWriter(this.newPointsFile_TextField.getText()+"_mat.data"));
        for (int i = 0; i < points.length; i++) {            
            for (int j = 0; j < points[i].length; j++) {
                out.write(points[i][j] + " ");
            }
            out.write(Float.toString(cdata[i]));
            out.write("\r\n");
        }
        */
        
    } catch (java.io.IOException ioE) {
        ioE.printStackTrace();
    } finally {        
        if (out != null) {
            try {
                out.flush();
                out.close();
            } catch (java.io.IOException ex) {               
                ex.printStackTrace();
            }
        }
    }
}//GEN-LAST:event_convert_jButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointsFileConverterView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convert_jButton;
    private javax.swing.JButton namesButton;
    private javax.swing.JLabel namesLabel;
    private javax.swing.JLabel namesLabel1;
    private javax.swing.JTextField namesTextField;
    private javax.swing.JTextField newPointsFile_TextField;
    private javax.swing.JButton newPointsFile_jButton;
    private javax.swing.JLabel newPointsLabel;
    private javax.swing.JButton pointsButton;
    private javax.swing.JTextField pointsTextField;
    // End of variables declaration//GEN-END:variables

}
