/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (c) 2005-2007 Universidade de Sao Paulo, Sao Carlos/SP, Brazil.
 * All Rights Reserved.
 *
 * This file is part of Projection Explorer (PEx).
 *
 * How to cite this work:
 *  
@inproceedings{paulovich2007pex,
author = {Fernando V. Paulovich and Maria Cristina F. Oliveira and Rosane 
Minghim},
title = {The Projection Explorer: A Flexible Tool for Projection-based 
Multidimensional Visualization},
booktitle = {SIBGRAPI '07: Proceedings of the XX Brazilian Symposium on 
Computer Graphics and Image Processing (SIBGRAPI 2007)},
year = {2007},
isbn = {0-7695-2996-8},
pages = {27--34},
doi = {http://dx.doi.org/10.1109/SIBGRAPI.2007.39},
publisher = {IEEE Computer Society},
address = {Washington, DC, USA},
}
 *  
 * PEx is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * PEx is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 *
 * This code was developed by members of Computer Graphics and Image
 * Processing Group (http://www.lcad.icmc.usp.br) at Instituto de Ciencias
 * Matematicas e de Computacao - ICMC - (http://www.icmc.usp.br) of 
 * Universidade de Sao Paulo, Sao Carlos/SP, Brazil. The initial developer 
 * of the original code is Fernando Vieira Paulovich <fpaulovich@gmail.com>.
 *
 * Contributor(s): Roberto Pinho <robertopinho@yahoo.com.br>, 
 *                 Rosane Minghim <rminghim@icmc.usp.br>
 *
 * You should have received a copy of the GNU General Public License along 
 * with PEx. If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */

package visualizer.wizard;

import java.io.File;
import java.util.Arrays;
import javax.swing.JFileChooser;
import visualizer.google.GoogleSearchManager;
import visualizer.google.GoogleView;
import visualizer.projection.ProjectionData;
import visualizer.projection.SourceType;
import visualizer.util.OpenDialog;
import visualizer.util.filefilter.DATAFilter;
import visualizer.util.filefilter.DMATFilter;
import visualizer.util.filefilter.TITLEFilter;
import visualizer.util.filefilter.ZIPFilter;
import visualizer.view.JExtendedComboBox;

/**
 *
 * @author  Fernando Vieira Paulovich
 */
public class DataSourceChoice extends WizardPanel {

    /** Creates new form DataSourceChoice
     * @param projectionData 
     */
    public DataSourceChoice(ProjectionData projectionData) {
        this.projectionData = projectionData;
        initComponents();
        this.imagesRadioButtonActionPerformed(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {
      java.awt.GridBagConstraints gridBagConstraints;

      sourceButtonGroup = new javax.swing.ButtonGroup();
      pointsLabelButtonGroup = new javax.swing.ButtonGroup();
      corporaRadioButton = new javax.swing.JRadioButton();
      distanceMatrixRadioButton = new javax.swing.JRadioButton();
      pointsRadioButton = new javax.swing.JRadioButton();
      corporaTextField = new javax.swing.JTextField();
      distanceMatrixTextField = new javax.swing.JTextField();
      pointsTextField = new javax.swing.JTextField();
      corporaButton = new javax.swing.JButton();
      distanceMatrixButton = new javax.swing.JButton();
      pointsButton = new javax.swing.JButton();
      titlesLabel = new javax.swing.JLabel();
      titlesTextField = new javax.swing.JTextField();
      titlesButton = new javax.swing.JButton();
      googleRadioButton = new javax.swing.JRadioButton();
      googleButton = new javax.swing.JButton();
      googleComboBox = new JExtendedComboBox();
      imagesTextField = new javax.swing.JTextField();
      imagesButton = new javax.swing.JButton();
      imagesRadioButton = new javax.swing.JRadioButton();

      setBorder(javax.swing.BorderFactory.createTitledBorder("Choose the Data Source"));
      setLayout(new java.awt.GridBagLayout());

      sourceButtonGroup.add(corporaRadioButton);
      corporaRadioButton.setText("Documents");
      corporaRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
      corporaRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
      corporaRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            corporaRadioButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(corporaRadioButton, gridBagConstraints);

      sourceButtonGroup.add(distanceMatrixRadioButton);
      distanceMatrixRadioButton.setText("Distance File");
      distanceMatrixRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
      distanceMatrixRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
      distanceMatrixRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            distanceMatrixRadioButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(distanceMatrixRadioButton, gridBagConstraints);

      sourceButtonGroup.add(pointsRadioButton);
      pointsRadioButton.setText("Points File");
      pointsRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
      pointsRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
      pointsRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            pointsRadioButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(pointsRadioButton, gridBagConstraints);

      corporaTextField.setColumns(35);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(corporaTextField, gridBagConstraints);

      distanceMatrixTextField.setColumns(35);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(distanceMatrixTextField, gridBagConstraints);

      pointsTextField.setColumns(35);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(pointsTextField, gridBagConstraints);

      corporaButton.setText("Search...");
      corporaButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            corporaButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(corporaButton, gridBagConstraints);

      distanceMatrixButton.setText("Search...");
      distanceMatrixButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            distanceMatrixButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(distanceMatrixButton, gridBagConstraints);

      pointsButton.setText("Search...");
      pointsButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            pointsButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(pointsButton, gridBagConstraints);

      titlesLabel.setText("Titles File");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(6, 3, 3, 3);
      add(titlesLabel, gridBagConstraints);

      titlesTextField.setColumns(40);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(6, 3, 3, 3);
      add(titlesTextField, gridBagConstraints);

      titlesButton.setText("Search...");
      titlesButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            titlesButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(6, 3, 3, 3);
      add(titlesButton, gridBagConstraints);

      sourceButtonGroup.add(googleRadioButton);
      googleRadioButton.setText("Google");
      googleRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
      googleRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
      googleRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            googleRadioButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(googleRadioButton, gridBagConstraints);

      googleButton.setText("New Query");
      googleButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            googleButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(googleButton, gridBagConstraints);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(googleComboBox, gridBagConstraints);

      imagesTextField.setColumns(35);
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 2;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(imagesTextField, gridBagConstraints);

      imagesButton.setText("Search...");
      imagesButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            imagesButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 3;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(imagesButton, gridBagConstraints);

      sourceButtonGroup.add(imagesRadioButton);
      imagesRadioButton.setSelected(true);
      imagesRadioButton.setText("Images");
      imagesRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
      imagesRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
      imagesRadioButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            imagesRadioButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
      add(imagesRadioButton, gridBagConstraints);
   }// </editor-fold>//GEN-END:initComponents
    private void googleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_googleRadioButtonActionPerformed
        this.corporaButton.setEnabled(false);
        this.corporaTextField.setEnabled(false);
        
        this.imagesButton.setEnabled(false);
        this.imagesTextField.setEnabled(false);

        this.distanceMatrixButton.setEnabled(false);
        this.distanceMatrixTextField.setEnabled(false);

        this.pointsButton.setEnabled(false);
        this.pointsTextField.setEnabled(false);

        this.titlesButton.setEnabled(false);
        this.titlesTextField.setEnabled(false);

        this.corporaTextField.setText("");
        this.pointsTextField.setText("");
        this.distanceMatrixTextField.setText("");
        this.titlesTextField.setText("");
        this.imagesTextField.setText("");

        this.googleButton.setEnabled(true);
        this.googleComboBox.setEnabled(true);
        this.googleComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_googleRadioButtonActionPerformed

    private void googleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_googleButtonActionPerformed
        ProjectionWizardView view = (ProjectionWizardView) this.getTopLevelAncestor();
        GoogleView.getInstance(view).display(this);
    }//GEN-LAST:event_googleButtonActionPerformed

    private void titlesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titlesButtonActionPerformed
        int result = OpenDialog.showOpenDialog(new TITLEFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            this.titlesTextField.setText(filename);
        }
}//GEN-LAST:event_titlesButtonActionPerformed

    private void pointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsButtonActionPerformed
        int result = OpenDialog.showOpenDialog(new DATAFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            this.pointsTextField.setText(filename);
            this.autoFill(OpenDialog.getJFileChooser());
        }
    }//GEN-LAST:event_pointsButtonActionPerformed

    private void distanceMatrixButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceMatrixButtonActionPerformed
        int result = OpenDialog.showOpenDialog(new DMATFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            this.distanceMatrixTextField.setText(filename);
            this.autoFill(OpenDialog.getJFileChooser());
        }
    }//GEN-LAST:event_distanceMatrixButtonActionPerformed

    private void corporaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corporaButtonActionPerformed
        int result = OpenDialog.showOpenDialog(new ZIPFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            this.corporaTextField.setText(filename);
        }
    }//GEN-LAST:event_corporaButtonActionPerformed

    private void pointsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsRadioButtonActionPerformed
        this.corporaButton.setEnabled(false);
        this.corporaTextField.setEnabled(false);
        
        this.imagesButton.setEnabled(false);
        this.imagesTextField.setEnabled(false);
        
        this.distanceMatrixButton.setEnabled(false);
        this.distanceMatrixTextField.setEnabled(false);

        this.pointsButton.setEnabled(true);
        this.pointsTextField.setEnabled(true);

        this.titlesButton.setEnabled(true);
        this.titlesTextField.setEnabled(true);

        this.googleButton.setEnabled(false);
        this.googleComboBox.setEnabled(false);

        this.corporaTextField.setText("");
        this.distanceMatrixTextField.setText("");
        this.titlesTextField.setText("");
        this.imagesTextField.setText("");

        this.projectionData.setSourceType(SourceType.POINTS);
    }//GEN-LAST:event_pointsRadioButtonActionPerformed

    private void distanceMatrixRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceMatrixRadioButtonActionPerformed
        this.corporaButton.setEnabled(false);
        this.corporaTextField.setEnabled(false);
        
        this.imagesButton.setEnabled(false);
        this.imagesTextField.setEnabled(false);

        this.distanceMatrixButton.setEnabled(true);
        this.distanceMatrixTextField.setEnabled(true);

        this.pointsButton.setEnabled(false);
        this.pointsTextField.setEnabled(false);

        this.titlesButton.setEnabled(true);
        this.titlesTextField.setEnabled(true);

        this.googleButton.setEnabled(false);
        this.googleComboBox.setEnabled(false);

        this.corporaTextField.setText("");
        this.pointsTextField.setText("");
        this.titlesTextField.setText("");
        this.imagesTextField.setText("");

        this.projectionData.setSourceType(SourceType.DISTANCE_MATRIX);
    }//GEN-LAST:event_distanceMatrixRadioButtonActionPerformed

    private void corporaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corporaRadioButtonActionPerformed
        this.corporaButton.setEnabled(true);
        this.corporaTextField.setEnabled(true);

        this.imagesButton.setEnabled(false);
        this.imagesTextField.setEnabled(false);
        
        this.distanceMatrixButton.setEnabled(false);
        this.distanceMatrixTextField.setEnabled(false);

        this.pointsButton.setEnabled(false);
        this.pointsTextField.setEnabled(false);

        this.titlesButton.setEnabled(false);
        this.titlesTextField.setEnabled(false);

        this.googleButton.setEnabled(false);
        this.googleComboBox.setEnabled(false);

        this.pointsTextField.setText("");
        this.distanceMatrixTextField.setText("");
        this.titlesTextField.setText("");
        this.imagesTextField.setText("");       

        this.projectionData.setSourceType(SourceType.CORPUS);
    }//GEN-LAST:event_corporaRadioButtonActionPerformed

private void imagesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagesButtonActionPerformed
        int result = OpenDialog.showOpenDialog(new ZIPFilter(), this);

        if (result == JFileChooser.APPROVE_OPTION) {
            String filename = OpenDialog.getFilename();
            this.imagesTextField.setText(filename);
        }
}//GEN-LAST:event_imagesButtonActionPerformed

private void imagesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagesRadioButtonActionPerformed
        this.corporaButton.setEnabled(false);
        this.corporaTextField.setEnabled(false);

        this.imagesButton.setEnabled(true);
        this.imagesTextField.setEnabled(true);
        
        this.distanceMatrixButton.setEnabled(false);
        this.distanceMatrixTextField.setEnabled(false);

        this.pointsButton.setEnabled(false);
        this.pointsTextField.setEnabled(false);

        this.titlesButton.setEnabled(false);
        this.titlesTextField.setEnabled(false);

        this.googleButton.setEnabled(false);
        this.googleComboBox.setEnabled(false);

        this.pointsTextField.setText("");
        this.distanceMatrixTextField.setText("");
        this.titlesTextField.setText("");
        this.imagesTextField.setText("");       

        this.projectionData.setSourceType(SourceType.IMAGES);
}//GEN-LAST:event_imagesRadioButtonActionPerformed

    public DataSourceChoice reset() {
        GoogleSearchManager manager = GoogleSearchManager.getInstance();
        String[] queries = manager.getQueries();
        Arrays.sort(queries);

        this.googleComboBox.removeAllItems();
        for (String query : queries) {
            this.googleComboBox.addItem(query);
        }

        return this;
    }

    public void refreshData() {
        if (this.corporaRadioButton.isSelected()) {
            this.projectionData.setSourceFile(this.corporaTextField.getText());
        } else if (this.imagesRadioButton.isSelected()) {
           this.projectionData.setSourceFile(this.imagesTextField.getText());
        } else if (this.pointsRadioButton.isSelected()) {
            this.projectionData.setSourceFile(this.pointsTextField.getText());
            this.projectionData.setTitlesFile(this.titlesTextField.getText());
        } else if (this.distanceMatrixRadioButton.isSelected()) {
            this.projectionData.setSourceFile(this.distanceMatrixTextField.getText());
            this.projectionData.setTitlesFile(this.titlesTextField.getText());
        } else if (this.googleRadioButton.isSelected()) {
            GoogleSearchManager manager = GoogleSearchManager.getInstance();
            String query = (String) this.googleComboBox.getSelectedItem();

            if (query != null) {
                this.projectionData.setSourceFile(manager.getCorpus(query));
            }

            this.projectionData.setNumberLines(1);
        }
    }

    private void autoFill(JFileChooser file) {
        String filename = file.getSelectedFile().getName();
        String titlefile = filename.substring(0, filename.lastIndexOf('.')) + ".titles";
        String namesfileName = filename.substring(0, filename.lastIndexOf('.')) + ".names";
        File[] files = file.getCurrentDirectory().listFiles();

        for (File f : files) {
            if (titlefile.equals(f.getName())) {
                this.titlesTextField.setText(f.getAbsolutePath());
            } else if (namesfileName.equals(f.getName())) {
            }
        }
    }

    private ProjectionData projectionData;
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton corporaButton;
   private javax.swing.JRadioButton corporaRadioButton;
   private javax.swing.JTextField corporaTextField;
   private javax.swing.JButton distanceMatrixButton;
   private javax.swing.JRadioButton distanceMatrixRadioButton;
   private javax.swing.JTextField distanceMatrixTextField;
   private javax.swing.JButton googleButton;
   private javax.swing.JComboBox googleComboBox;
   private javax.swing.JRadioButton googleRadioButton;
   private javax.swing.JButton imagesButton;
   private javax.swing.JRadioButton imagesRadioButton;
   private javax.swing.JTextField imagesTextField;
   private javax.swing.JButton pointsButton;
   private javax.swing.ButtonGroup pointsLabelButtonGroup;
   private javax.swing.JRadioButton pointsRadioButton;
   private javax.swing.JTextField pointsTextField;
   private javax.swing.ButtonGroup sourceButtonGroup;
   private javax.swing.JButton titlesButton;
   private javax.swing.JLabel titlesLabel;
   private javax.swing.JTextField titlesTextField;
   // End of variables declaration//GEN-END:variables
}
